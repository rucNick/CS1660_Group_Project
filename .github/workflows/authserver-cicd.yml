name: Auth Server CI/CD for Cloud Run

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master
  workflow_dispatch:

env:
  PROJECT_ID: qr-attendance-455219
  REGION: us-central1
  SERVICE_NAME: auth-server

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        
    - name: Set execute permission for Maven wrapper
      run: chmod +x AuthServer/mvnw
        
    - name: Build with Maven
      run: cd AuthServer && ./mvnw clean package -DskipTests

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' || github.event_name == 'workflow_dispatch'
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        
    - name: Set execute permission for Maven wrapper
      run: chmod +x AuthServer/mvnw
        
    - name: Build with Maven
      run: cd AuthServer && ./mvnw clean package -DskipTests
      
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_AUTH }}
        
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ env.PROJECT_ID }}
        
    - name: Enable required APIs
      run: |
        # Enable required APIs
        gcloud services enable cloudbuild.googleapis.com --quiet || true
        gcloud services enable run.googleapis.com --quiet || true
        gcloud services enable artifactregistry.googleapis.com --quiet || true
        gcloud services enable firestore.googleapis.com --quiet || true
        
    - name: Build and push container image
      uses: google-github-actions/setup-gcloud@v1
      with:
        install_components: "beta"
    
    - name: Build and Push Docker Image to Google Container Registry
      run: |
        cd AuthServer
        # Configure docker to use the gcloud command-line tool as a credential helper
        gcloud auth configure-docker
        
        # Build the Docker image
        docker build -t gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }} .
        
        # Push the Docker image to Google Container Registry
        docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }}
        
    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy ${{ env.SERVICE_NAME }} \
          --image gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }} \
          --platform managed \
          --region ${{ env.REGION }} \
          --allow-unauthenticated \
          --memory 512Mi \
          --cpu 1 \
          --port 8080 \
          --set-env-vars="SPRING_PROFILES_ACTIVE=production,GOOGLE_CLIENT_ID=1043677821736-sd578og9up9kkobht663q1dchucsrhep.apps.googleusercontent.com,GOOGLE_CLIENT_SECRET=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"
          
    - name: Show deployment URL
      run: |
        echo "Auth Server URL: $(gcloud run services describe ${{ env.SERVICE_NAME }} --platform managed --region ${{ env.REGION }} --format 'value(status.url)')"
        echo "Auth Server deployed to Cloud Run"